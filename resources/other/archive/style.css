:root {
    --background-color: #fff;
    --text-color: #000;
    --button-fill: #e0e0e0;
    --button-hover-fill: #c0c0c0;
    --correct-color: #4CAF50;
    --wrong-color: #F44336;
    --font-family: 'Arial', sans-serif;
    --button-border: 1px solid rgba(0, 0, 0, 0.229);

    --white: #fff;
    --black: #000;
    --dark-grey: #1b2d36;
    --light-blue: #78d6c6;
    --dark-blue: #12486b;
    --green: #80c0a1;
    --yellow: #f5fccd;
    --orange: orange;
    --red: #ff7d66;
    --pink: #eb80b1;
}

body.dark {
    --background-color: #333;
    --text-color: #fff;
    --button-fill: #555;
    --button-hover-fill: #777;
}

body {
    color: var(--text-color);
    font-family: var(--font-family);
    margin: 0;
    padding: 0;
    transition: background-color 0.3s, color 0.3s;
    overflow-x: hidden; /* Disable horizontal scrolling */
    width: 100%; /* Ensure the body takes up the full viewport width */
}

.selectable {
    user-select: text;
}
.non-selectable {
    user-select: none;
}
.all-selectable {
    user-select: all;
}

/* Menu CSS */
.menu-button {
    cursor: pointer;
    position: absolute;
    top: 5px;
    right: 5px;
    padding: 7px;
    border-radius: 4px;
    transition: background-color 0.2s;
    color: var(--text-color);
    background-color: var(--button-fill);
    border: var(--button-border);
}

.menu {
    position: absolute;
    top: 47px;
    right: 5px;
    background-color: transparent;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out, border-color 0.3s ease-in-out; /* Add border-color transition */
    max-height: 0;
}

.menu-button:hover {
    background-color: var(--button-hover-fill);
}

.menu-item {
    padding: 10px;
    color: var(--text-color);
    background-color: var(--button-fill);
    transition: background-color 0.2s;
    cursor: pointer;
    border: var(--button-border);
    border-radius: 4px;
    margin-bottom: 2px;
}

.menu-item:hover {
    background-color: var(--button-hover-fill);
}

/* Question Section */
.question-box {
    margin: 2px 0px 40px;
    font-size: 1.8em;
    text-align: left;
    padding: 5px;
    border: 1px solid var(--button-fill);
    border-radius: 4px;
    margin-bottom: 40px;
    margin-top:2px;
}

.question-navigator {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 5px 0;
}

#question-number {
    width: 40px;
    padding: 0px;
    margin-right: 5px;
    border: 2px solid var(--button-fill);
    border-radius: 4px;
    text-align: center;
    background-color: var(--input-background-color); /* Use variable for background */
    color: var(--input-text-color); /* Use variable for text color */
    transition: background-color 0.2s, color 0.2s, border-color 0.2s; /* Add transitions for smooth effect */
}

#question-text {
    margin-top:0px;
}

#explanations-container{
    font-size: 3vh;
}

/* Bottom bar <> Controls and Question-Number Box */
.controls {
    position: fixed;
    bottom: 10px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 10px;
    box-sizing: border-box;
}

.controls button {
    background-color: var(--button-fill);
    color: var(--text-color);
    border: var(--button-border);
    padding: 3px 35px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.controls button:hover {
    background-color: var(--button-hover-fill);
}
/* 
.option-button {
    display: block;
    width: 100%;
    text-align: left;
    margin-top: 10px;
    padding: 8px 10px;
    background-color: transparent;
    color: var(--text-color);
    border: 2px solid var(--button-fill);
    border-radius: 5px;
    transition: background-color 0.2s, border-color 0.2s, color 0.2s;
    font-size: 0.75em;
}

.option-button:hover {
    background-color: var(--button-hover-fill);
    cursor: pointer; 
}
 */

 .option-button {
    display: block;
    width: 100%;
    margin: 0 0 20px 0;
    text-align: left;
    padding: 10px 20px; /* Adjust size as needed */
    border: none; /* Remove any default border */
    color: var(--white); /* Use the white color variable for text */
    background-color: var(--dark-blue); /* Use a variable for background color */
    font-size: 2rem; /* Adjust font size as needed */
    cursor: pointer; /* Makes it clear it's clickable */
    outline: none; /* Removes the focus outline, use with caution for accessibility */
    animation: changing-neon 20s infinite; /* Apply the neon animation */
    position: relative; /* Needed for the pseudo-elements to position correctly */
  }
  
  .option-button:hover {
    animation-play-state: paused; /* Optional: Pause animation on hover */
  }
  
  .option-button:focus {
    outline: 1px solid var(--white); /* Optional: Add an outline on focus for accessibility */
  }
  
.option-button.correct {
    background-color: var(--correct-color);
    border-color: var(--correct-color);
}

.option-button.wrong {
    background-color: var(--wrong-color);
    border-color: var(--wrong-color);
}
/* Grid Layout for Test Container */
#test-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(calc(33.33% - 10px), 1fr)); /* Creates a flexible grid with max 3 columns */
    gap: 5px; /* Sets the space between grid items */
    padding: 5px;
    width: 100%; /* Full width to utilize all available space */
    height: calc(100vh - 20px); /* Full viewport height minus any additional padding/margins */
    overflow: auto; /* Allows for scrolling within the container if content overflows */
    box-sizing: border-box; /* Includes padding and border in the element's total width and height */
    margin-top: 20px;
}

/* Button styles within test container */
#test-container button {
    width: 100%; /* Full width of the grid cell */
    padding: 10px;
    border: var(--button-border);
    border-radius: 4px;
    background-color: var(--button-fill);
    color: var(--text-color);
    text-align: center;
    cursor: pointer; /* Hand pointer on hover */
    font-family: var(--font-family);
    font-size: calc(1vw + 1vh + 1vmin);
    transition: background-color 0.2s, border-color 0.2s; /* Smooth transition for color and border changes */
}

#test-container button:hover {
    background-color: var(--button-hover-fill);
}

/* Responsive adjustments for smaller screens or fewer items */
@media (max-width: 600px) {
    #test-container {
        grid-template-columns: repeat(auto-fill, minmax(calc(50% - 10px), 1fr)); /* Adjust to 2 columns on small screens */
    }
}

@media (max-width: 400px) {
    #test-container {
        grid-template-columns: 1fr; /* Single column on very small screens */
    }
}


  body {
    height: 100vh;
    margin: 0;
    color: #fff;
    background-color: #000;
    /* font-size: 6vh; */
    /* font-family: sans-serif; */
   /*  text-transform: uppercase; */
    letter-spacing: 2px;
  }
  
  .profile-header {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
  }
  
  .title {
    position: relative;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 3rem 1.5rem;
    margin: 1rem;
  }
  
  /* Keyframe Animations */
  @keyframes changing-neon {
    0%,
    100% {
      box-shadow: 0 0 1px var(--white), 0 0 4px var(--white),
        0 0 8px var(--dark-blue), 0 0 16px var(--dark-blue),
        0 0 20px var(--dark-blue), inset 0 0 1px var(--white),
        inset 0 0 4px var(--white), inset 0 0 8px var(--dark-blue),
        inset 0 0 16px var(--dark-blue), inset 0 0 20px var(--dark-blue);
    }
    33% {
      box-shadow: 0 0 1px var(--white), 0 0 4px var(--white), 0 0 8px var(--green),
        0 0 16px var(--green), 0 0 20px var(--green), inset 0 0 1px var(--white),
        inset 0 0 4px var(--white), inset 0 0 8px var(--green),
        inset 0 0 16px var(--green), inset 0 0 20px var(--green);
    }
    66% {
      box-shadow: 0 0 1px var(--white), 0 0 4px var(--white),
        0 0 8px var(--light-blue), 0 0 16px var(--light-blue),
        0 0 20px var(--light-blue), inset 0 0 1px var(--white),
        inset 0 0 4px var(--white), inset 0 0 8px var(--light-blue),
        inset 0 0 16px var(--light-blue), inset 0 0 20px var(--light-blue);
    }
  }
  
  @keyframes changing-background {
    0%,
    100% {
      background-color: var(--dark-blue);
    }
    33% {
      background-color: var(--green);
    }
    66% {
      background-color: var(--light-blue);
    }
  }
  
  @keyframes changing-border {
    0%,
    100% {
      border-color: var(--dark-blue);
    }
    33% {
      border-color: var(--green);
    }
    66% {
      border-color: var(--light-blue);
    }
  }
  
  /* Profile Header Styles */
  .profile-header {
    position: relative;
    background: none;
    animation: changing-background;
    animation-iteration-count: infinite;
    animation-duration: 20s;
    z-index: -10;
  }
  .profile-header:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(transparent -20%, #000);
  }
  
  /* Profile Avatar */
  .profile-avatar {
    animation: changing-border;
    animation-iteration-count: infinite;
    animation-duration: 20s;
  }
  
  /* Location and Bio */
  .profile-location-and-bio {
    position: relative;
    background: linear-gradient(#000, transparent);
  }
  
  /* Profile Header Right and Navigation */
  .profile-header-right,
  .profile-nav-1.no-mobile-nav {
    animation: changing-border;
    animation-iteration-count: infinite;
    animation-duration: 20s;
    border-width: 2px;
  }
  
  .profile-nav-2 {
    background: none;
    padding-left: 0;
    padding-right: 0;
  }
  
  /* Pen Item Styles */
  .single-item.single-pen:before {
    content: "";
    position: absolute;
    z-index: -1;
    top: -6px;
    left: -6px;
    width: calc(100%);
    height: calc(100%);
    border-radius: 8px;
    animation: changing-neon;
    animation-iteration-count: infinite;
    animation-duration: 20s;
  }
  
  /* Pen Clip-path Background */
  .ContentGridItemBackground-module_root-qg7K1 {
    animation: changing-background;
    animation-iteration-count: infinite;
    animation-duration: 20s;
  }
  .ContentGridItemBackground-module_root-qg7K1:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 100% 100%, #000, transparent 300%);
  }
  